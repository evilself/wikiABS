<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- we can use annotations -->
    <context:annotation-config /> 
     
    <!-- package to look for annotated classes -->
    <context:component-scan base-package="com.americanbanksystems.wiki.service.implementation" />
     
    <!-- we will manage transactions with annotations -->
    <tx:annotation-driven />
 
    <!-- data source for our database -->
    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"
            value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
        <property name="url" value="jdbc:mysql://localhost:3306/wikiabs" />
        <property name="username" value="root" />
        <property name="password" value="adminroot" />
    </bean>
     
    <!-- configure hibernate session factory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses" >
            <list>
            	<value>com.americanbanksystems.wiki.domain.BaseEntity</value>
            	<value>com.americanbanksystems.wiki.domain.UserRole</value>
            	<value>com.americanbanksystems.wiki.domain.User</value>
            	<value>com.americanbanksystems.wiki.domain.Product</value>
                <value>com.americanbanksystems.wiki.domain.Article</value>                
                <value>com.americanbanksystems.wiki.domain.Attachment</value>                
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>  
    </bean>
    
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="jdbcTemplate"
        class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
    <constructor-arg type="javax.sql.DataSource" ref="dataSource"/>
</bean>

<!-- ************************************************************************************* -->

<!-- Configuring RoleVoter bean to use custom access roles, by default roles
        should be in the form ROLE_{XXX} -->
    <bean id="roleVoter"
        class="org.springframework.security.access.vote.RoleVoter">
        <property name="rolePrefix" value=""></property>
    </bean>  
 
    <bean id="accessDecisionManager"
        class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg name="decisionVoters"
            ref="roleVoter" />
    </bean>
 
    <sec:http request-matcher="regex" authentication-manager-ref="jdbc-auth"
        access-decision-manager-ref="accessDecisionManager">                
        <sec:intercept-url pattern="\A/articles\?new*\Z" access="USER,ADMIN" />
        <sec:intercept-url pattern="/users*" access="ADMIN" />
        <sec:intercept-url pattern="/users/\d*" access="ADMIN" />
        <sec:intercept-url pattern="\A/users\?new*\Z" access="ADMIN" />
        <sec:intercept-url pattern="/products*" access="ADMIN" />
        <sec:intercept-url pattern="/products/\d*" access="ADMIN" />
        <sec:intercept-url pattern="\A/products\?new*\Z" access="ADMIN" />
        <sec:form-login login-page="/loginFull" authentication-failure-url="/denied"
            username-parameter="username" password-parameter="password"
            default-target-url="/" />
        <sec:logout invalidate-session="true" logout-success-url="/loginFull"
            logout-url="/j_spring_security_logout" />
        <sec:access-denied-handler error-page="/denied"/>
        <sec:session-management invalid-session-url="/welcome">
            <sec:concurrency-control max-sessions="50"
                expired-url="/loginFull" />
        </sec:session-management>
    </sec:http>
 
    <sec:authentication-manager id="in-memory-auth">
        <sec:authentication-provider>
            <sec:user-service>
                <sec:user name="bmechkov" password="admin" authorities="Admin" />
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>
 
    <sec:authentication-manager id="dao-auth">
        <sec:authentication-provider user-service-ref="userDetailsService">
        </sec:authentication-provider>
    </sec:authentication-manager>
 
    <bean id="userDetailsService"
        class="com.americanbanksystems.wiki.security.dao.implementation.UserDetailsServiceImpl" />
 
    <sec:authentication-manager id="jdbc-auth" alias="authenticationManager">
        <sec:authentication-provider>
            <sec:jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select username,password, enabled from user where username=?"
                authorities-by-username-query="select username, role from user_roles where username=?" />
        </sec:authentication-provider>
    </sec:authentication-manager>
 
    <!-- MySQL DB DataSource -->
    <!-- beans:bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 
        <beans:property name="driverClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
        <beans:property name="url"
            value="jdbc:mysql://localhost:3306/wikiabs" />
        <beans:property name="username" value="root" />
        <beans:property name="password" value="adminroot" />
    </beans:bean-->   
 
    <!-- If DataSource is configured in Tomcat Servlet Container -->
    <!-- beans:bean id="dbDataSource"
        class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/jdbc/MyLocalDB" />
    </beans:bean-->

</beans>
